name: Core Libraries Coverage Check

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'Core/**'
      - 'EfCore/**'
  pull_request:
    branches: [ main, develop ]
    paths: 
      - 'Core/**'
      - 'EfCore/**'

jobs:
  core-coverage-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore DKNet.FW.sln
      
    - name: Build
      run: dotnet build DKNet.FW.sln --no-restore --configuration Release
      
    - name: Test Core Libraries
      run: |
        dotnet test Core/Fw.Extensions.Tests/Fw.Extensions.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --settings coverage.runsettings --verbosity minimal
        
    - name: Test EfCore Libraries
      run: |
        dotnet test EfCore/EfCore.Extensions.Tests/EfCore.Extensions.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --settings coverage.runsettings --verbosity minimal
        dotnet test EfCore/EfCore.Repos.Tests/EfCore.Repos.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --settings coverage.runsettings --verbosity minimal
        dotnet test EfCore/EfCore.Relational.Helpers.Tests/EfCore.Relational.Helpers.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --settings coverage.runsettings --verbosity minimal
        dotnet test EfCore/EfCore.Events.Tests/EfCore.Events.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --settings coverage.runsettings --verbosity minimal
        dotnet test EfCore/EfCore.HookTests/EfCore.HookTests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --settings coverage.runsettings --verbosity minimal
        dotnet test EfCore/EfCore.DataAuthorization.Tests/EfCore.DataAuthorization.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --settings coverage.runsettings --verbosity minimal
        
    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
      
    - name: Generate Core Coverage Report
      run: reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"core-coverage-report" -reporttypes:"Html;Cobertura;JsonSummary" -title:"Core Libraries Coverage Report"
      
    - name: Check Coverage Threshold
      run: |
        # Parse coverage and check if it meets the 95% threshold for core libraries
        coverage_line=$(grep -o 'line-rate="[^"]*"' core-coverage-report/Cobertura.xml | head -1 | grep -o '[0-9.]*')
        coverage_percent=$(echo "$coverage_line * 100" | bc -l | cut -d. -f1)
        
        echo "Coverage: ${coverage_percent}%"
        
        if [ "$coverage_percent" -lt 95 ]; then
          echo "❌ Coverage $coverage_percent% is below the required 95% threshold for core libraries"
          exit 1
        else
          echo "✅ Coverage $coverage_percent% meets the 95% threshold for core libraries"
        fi
        
    - name: Upload Core Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: core-coverage-report
        path: core-coverage-report/